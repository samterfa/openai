% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{create_completionlegacy}
\alias{create_completionlegacy}
\title{Create Completionlegacy}
\usage{
create_completionlegacy(
  model,
  prompt,
  best_of = NULL,
  echo = NULL,
  frequency_penalty = NULL,
  logit_bias = NULL,
  logprobs = NULL,
  max_tokens = NULL,
  n = NULL,
  presence_penalty = NULL,
  seed = NULL,
  stop = NULL,
  stream = NULL,
  suffix = NULL,
  temperature = NULL,
  top_p = NULL,
  user = NULL,
  return_response = F
)
}
\arguments{
\item{model}{(string) ID of the model to use. You can use the List models API to see all of your available models, or see our Model overview for descriptions of them. Required}

\item{prompt}{(string or array) The prompt(s) to generate completions for, encoded as a string, array of strings, array of tokens, or array of token arrays. Note that <|endoftext|> is the document separator that the model sees during training, so if a prompt is not specified the model will generate as if from the beginning of a new document. Required}

\item{best_of}{(integer or null) Generates best_of completions server-side and returns the "best" (the one with the highest log probability per token). Results cannot be streamed. When used with n, best_of controls the number of candidate completions and n specifies how many to return â€“ best_of must be greater than n. Note: Because this parameter generates many completions, it can quickly consume your token quota. Use carefully and ensure that you have reasonable settings for max_tokens and stop.}

\item{echo}{(boolean or null) Echo back the prompt in addition to the completion}

\item{frequency_penalty}{(number or null) Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim. See more information about frequency and presence penalties.}

\item{logit_bias}{(map) Modify the likelihood of specified tokens appearing in the completion. Accepts a JSON object that maps tokens (specified by their token ID in the GPT tokenizer) to an associated bias value from -100 to 100. You can use this tokenizer tool (which works for both GPT-2 and GPT-3) to convert text to token IDs. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token. As an example, you can pass {"50256": -100} to prevent the <|endoftext|> token from being generated.}

\item{logprobs}{(integer or null) Include the log probabilities on the logprobs most likely tokens, as well the chosen tokens. For example, if logprobs is 5, the API will return a list of the 5 most likely tokens. The API will always return the logprob of the sampled token, so there may be up to logprobs+1 elements in the response. The maximum value for logprobs is 5.}

\item{max_tokens}{(integer or null) The maximum number of tokens to generate in the completion. The token count of your prompt plus max_tokens cannot exceed the model's context length. Example Python code for counting tokens.}

\item{n}{(integer or null) How many completions to generate for each prompt. Note: Because this parameter generates many completions, it can quickly consume your token quota. Use carefully and ensure that you have reasonable settings for max_tokens and stop.}

\item{presence_penalty}{(number or null) Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics. See more information about frequency and presence penalties.}

\item{seed}{(integer or null) If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed, and you should refer to the system_fingerprint response parameter to monitor changes in the backend.}

\item{stop}{(string / array / null) Up to 4 sequences where the API will stop generating further tokens. The returned text will not contain the stop sequence.}

\item{stream}{(boolean or null) Whether to stream back partial progress. If set, tokens will be sent as data-only server-sent events as they become available, with the stream terminated by a data: \link{DONE} message. Example Python code.}

\item{suffix}{(string or null) The suffix that comes after a completion of inserted text.}

\item{temperature}{(number or null) What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. We generally recommend altering this or top_p but not both.}

\item{top_p}{(number or null) An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10\% probability mass are considered. We generally recommend altering this or temperature but not both.}

\item{user}{(string) A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. Learn more.}

\item{return_response}{(boolean) Whether to return the API response or parse the contents of the response. Defaults to FALSE (parse the response).}
}
\description{
Creates a completion for the provided prompt and parameters.
}
\seealso{
\href{https://platform.openai.com/docs/api-reference/completions/create}{Open AI Documentation}
}
